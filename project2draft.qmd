---
title: "Analysis of the Factors Affect the Quality Class Being Classified as Poor for Coffee Batch Using GLM"
author: "Group 13"
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  eval: true
  warning: false
  message: false
editor: 
  markdown: 
    wrap: sentence
---

```{r}
#| echo: true
#| warning: false
#| message: false

library(tidyverse)
library(moderndive)
library(gapminder)
library(sjPlot)
library(stats)
library(jtools)
library(gt)
library(MASS)
library(knitr)
library(broom)
library(GGally)
library(ggplot2)
library(dplyr)
library(broom)
```

# Introduction

Given the coffee dataset with the features of coffee and overall quality scores from the Coffee Quality Institute, aiming to provide the key information to the local coffee farmer and help them to improve coffee production with higher quality.

**Research Question:**

What factors will influence the quality score of a batch of coffee being classified as good or poor and how do these factors affect the quality score for the batch.

# Exploratory Data Analysis

## Description of Data

### Data Source

The dataset utilized in this study originates from the Coffee Quality Institute, containing detailed attributes related to coffee quality.
The primary objective of this dataset is to analyze the key factors influencing coffee quality scores and to provide insights that may assist local coffee producers in enhancing their production standards.

```{r}
#| echo: true
# Read dataset
coffee <- read.csv("dataset13.csv")
dim(coffee)
```

The dataset is first loaded and examined to assess its structure and completeness, which comprises multiple variables that capture key characteristics of coffee, including sensory attributes (e.g., aroma, flavor, acidity), environmental factors (e.g., altitude, harvest year), and quality classification (good or poor).

### Data Preprocessing

#### Remove missing value and transformation of Categorical Variables

```{r}

coffee1 <- na.omit(coffee)
# Check the type of the binary response variable and change to factor type.
coffee1$Qualityclass <- as.factor(coffee1$Qualityclass)
```

Since the response variable Qualityclass represents a binary classification (good vs. poor), it is converted into a factor variable to facilitate appropriate statistical modeling.
This conversion is particularly important for fitting a Generalized Linear Model (GLM), as it allows categorical outcomes to be appropriately modeled.

#### Detection and Removal of Outliers

```{r}
# Remove the outliers
numeric_cols <- sapply(coffee1, is.numeric)
keep_rows <- rep(TRUE, nrow(coffee1))

for (col in names(coffee1)[numeric_cols]) {
  Q1 <- quantile(coffee1[[col]], 0.15, na.rm = TRUE)
  Q3 <- quantile(coffee1[[col]], 0.85, na.rm = TRUE)
  
  IQR_value <- Q3 - Q1
  
  lower_bound <- Q1 - 1.5 * IQR_value
  upper_bound <- Q3 + 1.5 * IQR_value
  
  keep_rows <- keep_rows & (coffee1[[col]] >= lower_bound & coffee1[[col]] <= upper_bound)
}

coffee1 <- coffee1[keep_rows, ]
```

Extreme values in numerical variables may distort statistical inference.
Therefore, outliers are detected and removed using the Interquartile Range (IQR) method.

#### Examination of Variable Distribution

```{r}
# Check type of harvested year.
length(unique(coffee1$country_of_origin))
length(unique(coffee1$harvested))
class(coffee1$harvested)
```

A preliminary assessment of the country of origin and harvest year variables is conducted to understand their diversity and distribution.

The results indicate: 33 unique countries of origin; 9 distinct harvest years.

The harvested year variable is stored as an integer.

### Scaling the Variable

```{r}
coffee1$altitude_mean_meters <- scale(coffee1$altitude_mean_meters)
```

Since the value of the variable, mean altitude is extrmely larger than other continuous explanatory variables, this might cause the model instability and biased coefficient interpretation, which making it harder to interpret and compare with other variables.
Therefore, the standardization or scaling of the variable is required.

### Variable Definitions

```{r}

coffee1$altitude_mean_meters <- as.numeric(scale(coffee1$altitude_mean_meters))

variable <- data.frame(
  variablename = c("Qualityclass", "Aroma", "Flavor", "Acidity", 
                    "Category Two Defects", "Altitude Mean Meters", 
                    "Harvested", "Country of Origin"),
  Description = c("Coffee quality classification (Good/Poor)", 
                  "Sensory evaluation of coffee aroma", 
                  "Sensory evaluation of coffee flavor", 
                  "Sensory evaluation of coffee acidity", 
                  "Number of defects affecting coffee quality", 
                  "Mean altitude at which coffee is cultivated", 
                  "Year in which the coffee was harvested", 
                  "Country where the coffee was grown"),
  Type = c(sapply(coffee1[c("Qualityclass", "aroma", "flavor", "acidity", 
                            "category_two_defects", "altitude_mean_meters", 
                            "harvested", "country_of_origin")], class)),
  Unit = c("-", "Score (1-10)", "Score (1-10)", "Score (1-10)", 
           "Count", "Meters", "Year", "-")
)

variable %>%
  gt() %>%
  tab_header(
    title = "Description of Variables"
  ) %>%
  tab_options(
    table.width = pct(100)
  )

```

This table provides a structured overview of the dataset, ensuring clarity in variable interpretation.

### Correlation Analysis

Prior to model fitting, a pairwised correlation plot is computed to assess potential relationships between numerical explanatory variables.

```{r}
#| echo: true
#| label: Pair Plot
#| tbl-cap: Correlation table between variables 
coffee_numeric <- coffee1 %>%
  dplyr::select(aroma, flavor, acidity,category_two_defects, harvested) %>%
  mutate(across(where(is.factor), as.numeric))

ggpairs(coffee_numeric,
        title = "Pairwise Correlation Analysis of Coffee Quality Factors",
        upper = list(continuous = wrap("cor", size = 5)),
        lower = list(continuous = wrap("points", alpha = 0.6)),
        diag = list(continuous = wrap("densityDiag")))


```

Notice that there were high correlations found between the pairs aroma and flavor(0.83); aroma and acidity(0.75); flavor and acidity(0.84), suggesting that possible colinearity occurred.

## Data Visualization

**Boxplots of Explanatory Variables by Coffee Quality Class**

```{r}
#| echo: true
#| fig-cap: Aroma Grade by Coffee Quality Class
#| label: fig-boxplot1
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = aroma, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Aroma")+
  theme(legend.position = "none")
```

@fig-boxplot1 shows a boxplot of Aroma grade for coffee batch being classified as Good and Poor quality.
The median aroma score is higher for the Good quality class, indicating better aroma ratings.
Both classes have similar variability (IQR), but the Poor quality class shows a slightly wider overall spread.

```{r}
#| echo: true
#| fig-cap: Flavor Grade by Coffee Quality Class
#| label: fig-boxplot2
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = flavor, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Flavor")+
  theme(legend.position = "none")

```

@fig-boxplot2 shows a boxplot of Flavor scores for coffee batch being classified as Good and Poor quality.
The median flavor score for the Good quality class is noticeably higher than that of the Poor class.
The IQR for Good quality coffee is slightly smaller than that of Poor quality coffee, but the Poor quality class has a wider spread in flavor grades.

```{r}
#| echo: true
#| fig-cap: Acidity Grade by Coffee Quality Class
#| label: fig-boxplot3
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = acidity, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Acidity")+
  theme(legend.position = "none")

```

@fig-boxplot3 shows a boxplot of Acidity grades for coffee batch being classified as Good and Poor quality.
The median acidity score for the Good quality class is higher than that of the Poor quality class, and the IQRs for two quality classes appears similar.
However, Good quality coffee seems to have a slightly more compact distribution.
Both classes have several outliers, but Good quality class has more outliers above 8.0, while Poor quality coffee has more outliers below 7.0.

```{r}
#| echo: true
#| fig-cap: Count of two Category defects by Coffee Quality Class
#| label: fig-boxplot4
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = category_two_defects, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Category_two_defects")+
  theme(legend.position = "none")

```

@fig-boxplot4 is the boxplot of Category of two defects for coffee batch being classified as Good and Poor quality.
The median number of defects are almost the same for both Poor and Good quality class.
Both quality classes have a similar IQR, but a slightly wider spread is found for Poor quality class.
Notice two quality classes contain large outliers, but Poor quality class has more extreme values, with defect counts exceeding 15.

```{r}
#| echo: true
#| fig-cap: Mean Altitude (in meters) by Coffee Quality Class
#| label: fig-boxplot5
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = altitude_mean_meters, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Altitude (by meters)")+
  theme(legend.position = "none")
```

@fig-boxplot5 shows a boxplot of scaled mean altitude(in meters) of coffee batch being classified as Good and Poor quality.
The median altitude for the Good quality class is slightly higher than that of the Poor quality class and IQRs for two classes are similar.
However, the Good quality class appears to have a higher overall distribution of altitude values.
Both quality classes contain multiple outliers, but the Poor quality class has more extreme low-altitude values.

```{r}
#| echo: true
#| fig-cap: Harvested Year by Coffee Quality Class
#| label: fig-boxplot6
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = harvested, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Harvested Year")+
  theme(legend.position = "none")

```

@fig-boxplot6 is the boxplot of harvested year for coffee batch being classified as Good and Poor quality.
The median harvested year for both Good and Poor quality classes appears to be similar and the IQRs are nearly the same.
No significant outliers are found in this boxplot.

# Formal Analysis

## Model Fitting

```{r}
#| echo: true
# Fit GLM model with 6 variables exclude country.
model1 <- glm(formula=Qualityclass~ aroma + flavor + acidity +
               category_two_defects + 
               altitude_mean_meters + 
               harvested,
             data = coffee1,
             family = binomial(link = "logit"))
```

```{r}
#| echo: true
# check for the baseline category response variable
levels(coffee1$Qualityclass)
```

Note in this example, the baseline category for binary response (Qualityclass) is *Good*.

```{r}
#| echo: true
# Summary statistics for the first model.
summ(model1)
```

The Model 1 suggests that Aroma, Flavor, Acidity grades and mean altitude are the most important factors in determining coffee quality class.
Harvested Year is not significant (p = 0.11), suggesting that coffee quality classification does not strongly depend on the year it was harvested.
Note that the explanatory variable category_two_defects has a p-value of 1, which is not significant at all.
Consequently, it should not be considered for the further analysis and should be removed initially.

```{r}
# Model with one variable (category_two_defects) dropped.
model2 <- glm(formula = Qualityclass~ aroma + flavor + acidity +
               altitude_mean_meters + 
               harvested,
             data = coffee1,
             family = binomial(link = "logit"))

summ(model2)
```

The Model 2 shows that the variables Aroma, Flavor, Acidity grades and mean altitude are significant predictors of coffee quality.

AIC and BIC both decreased, indicating that removing insignificant variables does not impact predictive power.
Assuming a p-value of 0.05, harvested Year (p = 0.11) remains not statistically significant, meaning coffee quality is not strongly dependent on the year of harvest, an attempt was made to remove the only non-significant variable, harvested.

```{r}
# Model with one more variable dropped.
model3 <- glm(formula = Qualityclass~ aroma + flavor + acidity +
               altitude_mean_meters,
             data = coffee1,
             family = binomial(link = "logit"))

summ(model3)
```

All remaining variables now are statistically significant (p \< 0.05).
The AIC of Model 3 is observed to increase a little following the removal of the variable harvested, but the BIC decrease as expected.
It's a bit hard to determine either Model 2 or Model 3 shoukd be used, thus a further model comparison using deviance is required.

```{r}
#| echo: true
# Fit GLM model including all variables.
coffee1$country_of_origin <- as.factor(coffee1$country_of_origin)
glm_model <- glm(Qualityclass ~ .,
                 data = coffee1,
                 family = binomial(link = "logit"))
summ(glm_model)
```

In the full model, Aroma, Flavor, and Acidity grades remain highly significant, confirming their strong impact on coffee quality, and several countries of origin (like Colombia, India and Thailand) are also statistically significant, indicating that origin may influence coffee quality.
However, some countres of origin (like China, Ethiopia and Vietnam) are not significant, meaning they do not strongly predict coffee quality.
Moreover, mean altitude, harvest Year, and Category two defects are not significant in this case.

Following the incorporation of all variables into the model, there is an enhancement in R square.
That is to say an improvement in interpretability was observed, associated with a reduction in AIC.
However, a substantial increase was observed in the BIC, which may not be considered a valuable gain due to the cost of adding a large number of degrees of freedom.

```{r}
#| echo: true
#| label: tbl-select
#| tbl-cap: Model comparison values for different models
Models <- c('model1','model2','model3','glm_model') 
model.comp.values.model1 <- glance(model1)
model.comp.values.model2 <- glance(model2)
model.comp.values.model3 <- glance(model3)
model.comp.values.model <- glance(glm_model)

bind_rows(model.comp.values.model1,
          model.comp.values.model2, 
          model.comp.values.model3,
          model.comp.values.model,.id="Model") %>%
  dplyr::select(Model,null.deviance,df.null,deviance,df.residual,AIC,BIC) %>%
  mutate(Model=Models) %>%  
  kable(
     digits = 2
  )
```

```{r}
anova(model3,model2,test="Chisq")
```

As @tbl-select shows that Model 2 seems to have the smallest AIC values (534.34) followed by Model 3(545.96), while Model 3 has the lowest BIC values(574.04).
To determine the selection of the model, we perform the hypothesis test using residual deviance.

As the result (2.61) is less than the critical value of $\chi^2(1)$ which is 3.84, so that we're not able to reject the null hypothesis and there's no evidence to show that model 2 (with 5 variables) is better.
Therefore, Model 3 (with 4 variables) is deemed to be the most suitable.

## log-odds

```{r}
# Get the coefficents for the intercept and explanatory variables.
# Uese the code for latex expression.
mod1coefs <- round(coef(model3),4)
```

\begin{align}
\ln\left(\frac{p}{1-p}\right) &= \alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity} + \beta_4 \cdot \textrm{altitude\_mean\_meters}\nonumber\\
&= `r mod1coefs[1]`  `r mod1coefs[2]` \cdot \textrm{aroma}`r mod1coefs[3]` \cdot \textrm{flavor} `r mod1coefs[4]` \cdot \textrm{acidity} `r mod1coefs[5]` \cdot \textrm{altitude\_mean\_meters} \nonumber
\end{align}

where *p* = Prob (Quality score is **Poor**) and 1 - p = Prob(Quality score is **Good**) as we already check and confirmed the baseline category response is Good in the previous step.

The intercept is 119, meaning that when all explanatory variables are zero, the log-odds of being classified as poor quality is 119.
This is extreme condition not normally happened in the real world for coffee batches.

The log-odds of the quality score for the batch is Poor decrease by 4.50 for every unit increase in aroma grade when hold other variables kept unchanged.

Similarly, the log-odds of being classified as poor quality for the batch will decrease by 7.07 and 4.20 for one unit increase in flavor and acidity grades respectively when keep all other variables constant.

Mean altitude has a relative small negative coefficient compared to the previous three variables, so the log-odds of a coffee batch being Poor slightly decrease by 0.32 as one unit increase in mean altitude when hold other variables kept unchanged.

```{r}
#| echo: true
#| label: tbl-logoddsCI
#| tbl-cap: 95% Confidence Interval for the Log-odds
# 95% Confidence interval for the log-odds by different explanatory variable.
confint(model3)|>
  kable()
```

For @tbl-logoddsCI, since all the intervals($[-8.83,-5.44]$ for flavor grade, $[-5.93,-3.15]$ for aroma grade, $[-5.56,-2.89]$ for acidity grade, $[-0.54,-0.11]$ for mean altitude) don't contain zero thus indicates that the all explanatory variables in Model 3 are significant.

### 95% Confidence Interval Plot For Log-Odds

```{r}
#| echo: true
#| fig-cap: 95% Confidence Interval Plot for Log-Odds
#| label: fig-CIplot
# 95% Confidence Interval Plot for Log-Odds.
plot_model(model3, show.values = TRUE, transform = NULL,
           title = "Log-Odds (Poor Coffee Batch Qualtiy Score)", show.p = FALSE)
```

The @fig-CIplotodd again confirmed the significance of the explanatory variables visually.
Notice that flavor has the widest range of negative values whereas mean altitude has the narrowest confidence range.

For more straightforward interpretation, we use Odds ratio scale.

## Odds Ratio

$$
\frac{p}{1-p} = \exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity}+{\beta_4} \cdot \textrm{mean altitude})
$$

```{r}
#| echo: true
#| label: tbl-summtable
#| tbl-cap: Summary Table on the Odds Scale
model3 |>
  coef()|>
  exp()|>
  as.data.frame()|>
  rownames_to_column(var = "Variable")|>
  gt()
```

the value of the intercept ($1.44\times10^{52}$) gives the odds of a quality class being poor given all explanatory variables equal to zero, but in reality, it is highly unlikely for a batch of coffee have the grades of aroma, flavor and acidity all approach to zero.
It could still be interpreted as when chance of a batch of coffee be classified as poor quality are ($1.44\times10^{52}$) % greater than them being classified as good quality when all the explanatory variable equals to zero.

For aroma grade, we have an odds of $1.11\times10^{-2}$, which indicates that for every 1 unit increase in aroma grade, the odds of the quality class being poor decrease by $(1-1.11\times10^{-2}) \times 100$ % = 98.9% when other variables unchanged.
Thus higher aroma grades strongly reduce the likelihood of being classfied as poor quality.

Similarly, the odds for flavor grade and acidity grades are $8.44\times10^{-4}$ and for $1.50\times10^{-2}$ respectively, which both less than 1.
This means that odds of being classified as poor quality will reduce by 99.9% and 98.5% respectively for every 1 unit increase in flavor grade or acidity grade, keeping all other variables constant.

Finally, the odds for mean altitude(meters) is $7.25\times10^{-1}$, nearly approach to 1, indicating that for every 1 unit increase in mean altitude (meters), it decreases the odds of being classified as poor quality by 27.5% when hold all other variables unchanged.
Notice that compared to other explanatory variables, mean altitude has a relative small effect on coffee quality classification.

```{r}
#| echo: true
#| label: tbl-oddsCI
#| tbl-cap: 95% Confidence Interval for the Odds
# 95% Confidence interval for the odds by different explanatory variable.
confint(model3) |>
  exp() |>
  kable()
```

```{r}
#| echo: true
#| fig-cap: 95% Confidence Interval Plot for Odds Ratio
#| label: fig-CIplotodd
plot_model(model3, show.values = TRUE, 
           title = "Odds (Poor Quality Score)", show.p = FALSE)
```

From @tbl-oddsCI, most of the intervals($[0.00015, 0.0044]$ for flavor grade, $[0.0026,0.0428]$ for aroma grade, $[0.0039, 0.0554]$ for acidity grade, $[0.582, 0.898]$ for mean altitude) don't contain one thus indicate that the explanatory variables in model 3 are significant.

The @fig-CIplotodd shows the 95% confidence intervals for three explanatory variable, again confirmed the significance of the explanatory variables visually.

## Probability

As we could obtain the probability *p* = Prob (Quality score is **Poor**) using:

$$
p = \frac{\exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity}+{\beta_4} \cdot \textrm{mean altitude})}{1 + \exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity}+{\beta_4} \cdot \textrm{mean altitude})}
$$

```{r}
# Add probability to the dataset.
coffee1 <- coffee1 |>
  mutate(probs.poor = fitted(model3))
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Aroma Grade.
#| label: fig-prob1
ggplot(data = coffee1, aes(x = aroma, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Aroma Grade", 
       y = "Probability of Quality Score is Poor by Aroma Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Flavor Grade.
#| label: fig-prob2
ggplot(data = coffee1, aes(x = flavor, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Flavor Grade", 
       y = "Probability of Quality Score is Poor by Flavor Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Acidity Grade.
#| label: fig-prob3
ggplot(data = coffee1, aes(x = acidity, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Acidity Grade", 
       y = "Probability of Quality Score is Poor by Acidity Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by altitude_mean_meters Grade.
#| label: fig-prob4
ggplot(data = coffee1, aes(x = altitude_mean_meters, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Mean Altitude(in meters)", 
       y = "Probability of Quality Score is Poor by Mean Altitude(in meters)")
```

As @fig-prob1 shows the probability of the quality score being classified as poor by aroma grade, the less the aroma grade , the higher probability being classified as poor quality.
It's reasonable to have such shape as the median aroma grade is round 7.2 (recalled from the @fig-boxplot1 ) so the outliers (aroma grade equals to zero) will be directly classified as poor quality with the probability of 1.

Similar interpretations will used for @fig-prob2, @fig-prob3.
These two plots indicate the probabilities of the quality score being classified as poor by flavor and acidity grade.
Again, the higher score of the flavor grade, acidity grade, the less probability being classified as poor quality.
The probabilities decrease gradually at first, then sharply around a certain point, and finally gradually approach to zero.

As @fig-prob4 shows the probability of the quality score being classified as poor by mean altitude, lower altitudes correspond to a higher probability of being classified as poor quality, aligning with @fig-boxplot5, where the median altitude of Poor quality class has more low-altitude samples.
The probability curve declines with a general constant rate, indicating better quality at higher altitudes.

# Conclusion

Sensory attributes like Aroma, Flavor, Acidity grades are the the most influential variables for predicting the quality score of coffee batch: @fig-prob1, @fig-prob2, and @fig-prob3 indicate that higher aroma, flavor, and acidity scores significantly reduce the probability of being classified as Poor quality.
Notice that flavor has the largest impact, followed by aroma and acidity.
Boxplots (@fig-boxplot1, @fig-boxplot2, @fig-boxplot3) further show that good quality coffee has consistently higher sensory scores.
Then, mean altitude has a moderate but still significant effect on the quality class of coffee batch.

Therefore, by focusing on improving flavor, aroma, and acidity grades, and growing coffee at low altitudes, the local coffee farmers will have a greater chance that their coffee being classified as high quality (Good).
