---
title: "Draft "
author: "Group 13"
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  eval: true
  warning: false
  message: false
---

```{r}
#| echo: true
#| warning: false
#| message: false

library(tidyverse)
library(moderndive)
library(gapminder)
library(sjPlot)
library(stats)
library(jtools)
library(gt)
library(MASS)
library(knitr)
library(dplyr)
```

# Introduction

Given the coffee dataset with the features of coffee and overall quality scores from the Coffee Quality Institute, aiming to provide the key information to the local coffee farmer and help them to improve coffee production with higher quality.

**Research Question:**

What factors will influence the quality score of a batch of coffee being classified as good or poor and how do these factors affect the quality score for the batch.

# Exploratory Data Analysis

## Description of Data

```{r}
#| echo: true
# Read dataset
coffee <- read.csv("dataset13.csv")
```

```{r}
# Remove missing value in the dataset
coffee1 <- na.omit(coffee)
# Check the type of the binary response variable and change to factor type.
class(coffee1$Qualityclass)
coffee1$Qualityclass <- as.factor(coffee1$Qualityclass)
```

```{r}
# Remove the outliers
numeric_cols <- sapply(coffee1, is.numeric)
keep_rows <- rep(TRUE, nrow(coffee1))

for (col in names(coffee1)[numeric_cols]) {
  Q1 <- quantile(coffee1[[col]], 0.15, na.rm = TRUE)
  Q3 <- quantile(coffee1[[col]], 0.85, na.rm = TRUE)
  
  IQR_value <- Q3 - Q1
  
  lower_bound <- Q1 - 1.5 * IQR_value
  upper_bound <- Q3 + 1.5 * IQR_value
  
  keep_rows <- keep_rows & (coffee1[[col]] >= lower_bound & coffee1[[col]] <= upper_bound)
}

coffee1 <- coffee1[keep_rows, ]
```

```{r}
length(unique(coffee1$country_of_origin))
length(unique(coffee1$harvested))
class(coffee1$harvested)
class(coffee1$Qualityclass)
```

```{r}
#| echo: true
#| label: tbl-correlation between numerical explanatory variables.
#| tbl-cap: Correlation table between variables
coffee1|>
  dplyr::select(aroma,flavor,acidity,
         category_two_defects,
         altitude_mean_meters,
         harvested)|>
  cor()|>
  as.data.frame()|>
  rownames_to_column(var = "Variable")|>
  gt()
```

Notice that there were high correlations found between the pairs aroma and flavor(0.83); aroma and acidity(0.75); flavor and acidity(0.84), suggesting that possible colinearity occurred.

## Data Visualization

**Boxplots of Explanatory Variables by Coffee Quality Class**

```{r}
#| echo: true
#| fig-cap: Aroma Grade by Coffee Quality Class
#| label: fig-boxplot1
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = aroma, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Aroma")+
  theme(legend.position = "none")
```
In @fig-boxplot2, the boxplot displays the distribution of the Aroma scores for coffee samples categorized into two quality classes: Good and Poor. The median aroma score for the Good quality class is higher than that of the Poor quality class, indicating that coffee samples classified as good tend to have better aroma ratings. The IQR (the length of the box) is similar for both quality classes, suggesting comparable variability in aroma scores within each category. The spread of aroma ratings is slightly wider for Poor quality coffee compared to Good coffee. The Good quality class has a few high aroma outliers above 8.5, whereas the Poor class has some lower outliers near 7.0. In conclusion, coffee samples with a Good quality classification generally exhibit higher aroma ratings, whereas Poor quality samples tend to have lower median scores and slightly higher variability.

```{r}
#| echo: true
#| fig-cap: Flavor Grade by Coffee Quality Class
#| label: fig-boxplot2
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = flavor, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Flavor")+
  theme(legend.position = "none")

```
In @fig-boxplot2, the boxplot illustrates the distribution of Flavor scores for coffee samples categorized as either Good or Poor quality.The median flavor score for the Good quality class is noticeably higher than that of the Poor class, suggesting that coffee samples classified as Good tend to have better flavor ratings on average. The IQR (box length) for Good quality coffee is slightly smaller than that of Poor quality coffee, indicating that the flavor ratings are more consistent within the Good category. The Poor quality class exhibits a wider spread in scores, indicating greater variability in flavor ratings. Both quality classes have several outliers, with Good quality coffee having high-value outliers above 8.5. The Poor category has more outliers on the lower end, with flavor scores dropping below 6.5. In conclusion, coffee samples in the Good quality class generally receive higher flavor ratings than those in the Poor class. The Poor quality coffee exhibits greater variability in flavor, with some samples scoring significantly lower.

```{r}
#| echo: true
#| fig-cap: Acidity Grade by Coffee Quality Class
#| label: fig-boxplot3
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = acidity, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Acidity")+
  theme(legend.position = "none")

```
In @fig-boxplot3, the boxplot illustrates the distribution of Acidity scores for coffee samples categorized as either Good or Poor quality. The median acidity score for the Good quality class is higher than that of the Poor quality class, suggesting that coffee samples classified as Good generally have higher acidity ratings, which may contribute to a brighter and more desirable flavor profile. The IQR (box length) for both Good and Poor quality classes appears similar, indicating comparable variability in acidity scores. However, Good quality coffee seems to have a slightly more compact distribution, implying more consistency in acidity ratings. Both classes have several outliers, but Good quality coffee has more outliers above 8.0, while Poor quality coffee has more outliers below 7.0. This suggests that some poor-quality coffee samples have notably lower acidity scores, while some good-quality samples exhibit particularly high acidity. In conclusion, coffee samples classified as Good generally have higher and more consistent acidity ratings compared to Poor quality samples, which shows greater variability and lower acidity scores.

```{r}
#| echo: true
#| fig-cap: Count of two Category defects by Coffee Quality Class
#| label: fig-boxplot4
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = category_two_defects, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Category_two_defects")+
  theme(legend.position = "none")

```
In @fig-boxplot4, The boxplot visualizes the distribution of Category Two Defects across different Coffee Quality Classes (Good and Poor). The median number of defects is slightly higher for the Poor quality class compared to the Good quality class, suggests that higher defect counts are more commonly associated with lower-quality coffee. Both quality classes have a similar IQR (box length), meaning the variability in defect counts within each category is comparable. The Poor quality class exhibits a slightly wider spread, indicating a greater range of defect occurrences. Both quality classes contain numerous outliers, but Poor quality coffee has more extreme values, with defect counts exceeding 15. In conclusion, poor quality coffee generally has a higher number of defects than Good quality coffee. However, defects are not entirely absent in Good quality coffee, as some samples still exhibit minor defects.

```{r}
#| echo: true
#| fig-cap: Mean Altitude (in meters) by Coffee Quality Class
#| label: fig-boxplot5
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = altitude_mean_meters, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Altitude (by meters)")+
  theme(legend.position = "none")
```
In @fig-boxplot5, boxplot visualizes the distribution of mean altitude (in meters) for coffee samples classified into Good and Poor quality classes. The median altitude for the Good quality class is slightly higher than that of the Poor quality class. Both quality classes exhibit similar IQRs (box lengths), indicating comparable variability in growing altitudes. However, the Good quality class appears to have a higher overall distribution of altitude values. Both quality classes contain multiple outliers, but the Poor quality class has more extreme low-altitude values. In conclusion, good quality coffee is generally associated with higher altitude cultivation, while Poor quality coffee includes more low-altitude samples and exhibits greater variability. 
```{r}
#| echo: true
#| fig-cap: Harvested Year by Coffee Quality Class
#| label: fig-boxplot6
ggplot(data = coffee1, aes(x=Qualityclass, 
                           y = harvested, 
                           fill=Qualityclass))+
  geom_boxplot()+
  labs(x = "Qualityclass", y = "Harvested Year")+
  theme(legend.position = "none")

```
In @fig-boxplot6, this boxplot visualizes the distribution of harvested years for coffee samples categorized as Good and Poor quality classes. The median harvested year for both Good and Poor quality classes appears to be similar, around 2014, suggesting that coffee quality may not be strongly influenced by the harvest year within this dataset. The IQRs (box lengths) are nearly identical, indicating that both quality classes have a similar spread of harvested years. The typical harvest years for both Good and Poor quality coffee range approximately from 2012 to 2016. There do not appear to be significant outliers, suggesting a relatively consistent harvest time distribution across quality classes. In conclusion, harvest year does not appear to be a key determinant of coffee quality in this dataset.
# Formal Analysis

## Model Fitting

```{r}
#| echo: true
# Fit GLM model.
model <- glm(formula=Qualityclass~ aroma + flavor + acidity +
               category_two_defects + 
               altitude_mean_meters + 
               harvested,
             data = coffee1,
             family = binomial(link = "logit"))
```

```{r}
#| echo: true
# check for the baseline category response variable
levels(coffee1$Qualityclass)
```

Note in this example, the baseline category for binary response (Qualityclass) is *Good*.

```{r}
#| echo: true
# Summary statistics
summ(model)
```

Note that the explanatory variable category_two_defects has a p-value of 1, which is not significant at all. Consequently, it should not be considered for the further analysis and should be removed initially.

```{r}
# Model with one variable dropped.
model2 <- glm(formula = Qualityclass~ aroma + flavor + acidity +
               altitude_mean_meters + 
               harvested,
             data = coffee1,
             family = binomial(link = "logit"))

summ(model2)
```

Assuming a p-value of 0.05, an attempt was made to remove the only non-significant variable, harvested.

```{r}
model3 <- glm(formula = Qualityclass~ aroma + flavor + acidity +
               altitude_mean_meters,
             data = coffee1,
             family = binomial(link = "logit"))

summ(model3)
```

The AIC of model 3 is observed to increase a little following the removal of the variable harvested, but the BIC decrease as expected. Consequently, model 3 is deemed to be the most suitable.

```{r}
#| echo: true
# Fit GLM model including all variables.
coffee1$country_of_origin <- as.factor(coffee1$country_of_origin)
glm_model <- glm(Qualityclass ~ .,
                 data = coffee1,
                 family = binomial(link = "logit"))
summ(glm_model)
```

Following the incorporation of all variables into the model, an enhancement in R square, that is to say an improvement in interpretability, was observed, concomitant with a diminution in AIC. However, a substantial increase was observed in the BIC, which may not be considered a valuable gain due to the cost of adding a large number of degrees of freedom.

## log-odds

```{r}
mod1coefs <- round(coef(model3),4)
```

\begin{align}
\ln\left(\frac{p}{1-p}\right) &= \alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity} + \beta_4 \cdot \textrm{altitude\_mean\_meters}\nonumber\\
&= `r mod1coefs[1]`  `r mod1coefs[2]` \cdot \textrm{aroma}`r mod1coefs[3]` \cdot \textrm{flavor} `r mod1coefs[4]` \cdot \textrm{acidity} `r mod1coefs[5]` \cdot \textrm{altitude\_mean\_meters} \nonumber
\end{align}

where *p* = Prob (Quality score is **Poor**) and 1 - p = Prob(Quality score is **Good**) as we already check and confirmed the baseline category response is Good in the previous step.

Thus, the log-odds of the Quality score for the batch is Poor decrease by 4.5 for every unit increase in aroma grade when hold other variables kept unchanged. Similarly, the log-odds of the Quality score for the batch is Poor decrease by 7.02 for every unit increase in flavor grade when hold other variables kept unchanged. And the log-odds of the Quality score for the batch is Poor decrease by 4.42 for every unit increase in acidity grade when hold other variables constant.

```{r}
#| echo: true
#| label: tbl-logoddsCI
#| tbl-cap: 95% Confidence Interval for the Log-odds
# 95% Confidence interval for the log-odds by different explanatory variable.
confint(model3)|>
  kable()
```

For @tbl-logoddsCI, since most of the intervals don't contain 1 thus again confirmed that the explanatory variables in model 2 are significant excluding the harvested.

```{r}
#| echo: true
mod.coef.logodds <- model3 |>
  summary()|>
  coef()
```

### 95% Confidence Interval Plot For Log-Odds

```{r}
#| echo: true
#| fig-cap: 95% Confidence Interval Plot for Log-Odds
#| label: fig-CIplot
# 95% Confidence Interval Plot for Log-Odds.
plot_model(model3, show.values = TRUE, transform = NULL,
           title = "Log-Odds (Poor Coffee Batch Qualtiy Score)", show.p = FALSE)
```

```{r}
# Add log-odds to the dataset
coffee1 <- coffee1 |>
  mutate(logodds.poor = predict(model3))
```

For @tbl-logoddsCI, since most of the intervals($[-6.0908,-3.2701]$ for aroma grade, $[-8.8598,-5.4496]$ for flavor grade, $[-5.4826,-2.8223]$ for acidity grade, $[-0.0013,-0.0003]$ for altitude_mean_meters grade, $[-0.2124,0.0203]$ for harvested grade), excluding the variable harvested, don't contain zero thus indicates that the explanatory variables in model 2 are significant. And the @fig-CIplotodd again confirmed the significant of the explanatory variables visually.

For more straightforward interpretation, we use Odds ratio scale.

## Odds Ratio

$$
\frac{p}{1-p} = \exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity})
$$

```{r}
#| echo: true
#| label: tbl-summtable
#| tbl-cap: Summary Table on the Odds Scale
model3 |>
  coef()|>
  exp()|>
  as.data.frame()|>
  rownames_to_column(var = "Variable")|>
  gt()
```

the value of the intercept ($1.82\times10^{52}$) gives the odds of a quality class being poor given all explanatory variables equal to zero, but in reality, it is highly unlikely for a batch of coffee have the grades of aroma, flavor and acidity all approach to zero. It could still be interpreted as when chance of a batch of coffee be classified as poor quality are ($1.82\times10^{52}$) % greater than them being classified as good quality when all the explanatory variable equals to zero.

For aroma grade, we have an odds of $1.10\times10^{-2}$, which indicates that for every 1 unit increase in aroma grade, the odds of the quality class being poor increase by a factor of 0.01 when other variables unchanged.

The odds for flavor grade is $8.98\times10^{-4}$, thus the odds of the quality class being poor increase by a factor of 0.00089 for every 1 unit increase in flavor grade,keeping all other variables constant.

Finally, the odds for acidity grade is $1.20\times10^{-2}$, indicating that for every 1 unit increase in acidity grade, the odds of the quality class being poor increase by a factor of 0.012 keeping all other variable constant.

```{r}
#| echo: true
#| label: tbl-oddsCI
#| tbl-cap: 95% Confidence Interval for the Odds
# 95% Confidence interval for the odds by different explanatory variable.
confint(model3) |>
  exp() |>
  kable()
```

```{r}
#| echo: true
#| fig-cap: 95% Confidence Interval Plot for Odds Ratio
#| label: fig-CIplotodd
plot_model(model3, show.values = TRUE, 
           title = "Odds (Poor Quality Score)", show.p = FALSE)
```

From @tbl-oddsCI, most of the intervals($[0.0023, 0.0380]$ for aroma grade, $[0.00014,0.0043]$ for flavor grade, $[0.0042, 0.0594]$ for acidity grade, $[0.9986, 0.9997]$ for altitude_mean_meters grade, $[0.8087, 1.0205]$ for harvested grade) don't contain zero thus indicate that the explanatory variables in model 2 are significant.

The @fig-CIplotodd shows the 95% confidence intervals for three explanatory variable, again confirmed the significance of the explanatory variables visually.

## Probability

As we could obtain the probability *p* = Prob (Quality score is **Poor**) using:

$$
p = \frac{\exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity})}{1 + \exp(\alpha + \beta_1 \cdot \textrm{aroma} +\beta_2 \cdot \textrm{flavor} + \beta_3 \cdot \textrm{acidicity})}
$$

```{r}
# Add probability to the dataset.
coffee1 <- coffee1 |>
  mutate(probs.poor = fitted(model3))
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Aroma Grade.
#| label: fig-prob1
ggplot(data = coffee1, aes(x = aroma, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Aroma Grade", 
       y = "Probability of Quality Score is Poor by Aroma Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Flavor Grade.
#| label: fig-prob2
ggplot(data = coffee1, aes(x = flavor, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Flavor Grade", 
       y = "Probability of Quality Score is Poor by Flavor Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Acidity Grade.
#| label: fig-prob3
ggplot(data = coffee1, aes(x = acidity, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Acidity Grade", 
       y = "Probability of Quality Score is Poor by Acidity Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by altitude_mean_meters Grade.
#| label: fig-prob4
ggplot(data = coffee1, aes(x = altitude_mean_meters, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "altitude_mean_meters Grade", 
       y = "Probability of Quality Score is Poor by altitude_mean_meters Grade")
```

```{r}
#| echo: true
#| fig-cap: Probability of Quality Score is Poor by Harvested Grade.
#| label: fig-prob5
ggplot(data = coffee1, aes(x = acidity, y = probs.poor)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Harvested Grade", 
       y = "Probability of Quality Score is Poor by Harvested Grade")
```

As @fig-prob1 shows the probability of the quality score being classified as poor by aroma grade, the less the aroma grade , the higher probability being classified as poor quality. It's reasonable to have such shape as the median aroma grade is round 7.2 (recalled from the @fig-boxplot1 ) so the outliers (aroma grade equals to zero) will be directly classified as poor quality with the probability of 1.

Similar interpretations will used for @fig-prob2 and @fig-prob3. These two plots indicate the probabilities of the quality score being classified as poor by flavor and acidity grade. Again, the higher score of the flavor grade or acidity grade, the less probability being classified as poor quality. It's also reasonable to have such shape: the outliers (flavor grade equals to zero or acidity grade equals to zero) will be directly classified as poor quality with the probability of 1.

# Conclusion
